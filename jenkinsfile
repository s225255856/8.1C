pipeline {
    agent any

    environment {
        DIRECTORY_PATH = 'true'
        PRODUCTION_ENVIRONMENT = 'production environment'
    }
    
    stages {
        stage('Build') {
            steps {
                echo 'Fetch the source code from the directory path specified by the environment variable'
                echo 'Compile the code and generate any necessary artefacts using VSC'
            }
        }
        stage ('Save build log') {
            steps {
                script {
                    bat 'echo "Build log" > build.log'
                    archiveArtifacts artifacts: 'build.log', fingerprint: true
                }
            }
        }
        stage('Unit and Integration Test') {
            steps {
                echo 'Unit testing using mocha'
                echo 'Integration testing using mocha'
            }
            post {
                success {
                    emailext (
                        to: "mychi82003@gmail.com",
                        subject: "Unit and Integration Test",
                        body: "Testing completed successfully! See attached build log for details.",
                        attachmentsPattern: '**/build.log',
                        mimeType: 'text/plain'
                    )
                }
            }

        }
        stage('Code analysis') {
            steps {
                echo 'Analysing code using SonarQube'
            }
        }
        stage('Security Scan') {
            steps {
                echo 'Scanning for security using OpenVAS'
            }
            post {
                success {
                    emailext (
                        to: "mychi82003@gmail.com",
                        subject: "Security Scan",
                        body: "Security scan completed successfully! See attached build log for details.",
                        attachmentsPattern: '**/build.log',
                        mimeType: 'text/plain'
                    )
                }
            }
        }
        stage('Deploy to Staging') {
            steps {
                echo 'Deploying to staging server using AWS'
            }
        }
        stage('Integration Tests on Staging') {
            steps {
                echo 'Integration testing on staging server using AWS'
            }
        }
        stage('Deploy to Production') {
            steps {
                echo "Deploy to ${env.PRODUCTION_ENVIRONMENT} using AWS"
            }
        }
    }
}